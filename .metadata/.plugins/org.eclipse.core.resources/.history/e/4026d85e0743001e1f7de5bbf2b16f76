package day08;

public class Class01 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/* 클래스-설계도
		 * 객체를 생성하기위한 설계도
		 * 
		 * 클래스의 구성요소
		 * - 속성 : 멤버변수
		 * - 기능 : 메서드
		 *  
		 * 프린터 클래스
		 * - 속성 : 크기, 제조사, 색, 구동방식, 제품명
		 * - 기능 : 인쇄, 스캔, 복사, 팩스
		 *  
		 * 멤버변수는 클래스 안, 메서드 밖(보통 상단에 작성함)에 작성 => 4번째 줄
		 * 멤버변수는 클래스 안에서 사용할 수 있음(내 클래스의 모든 메서드에서 멤버변수를 사용할 수 있음)
		 *   => 공유가 가능함
		 *   
		 * 접근제한자 class 클래스명 {
		 * // 클래스명은 반드시 대문자로 시작되어야함(규칙)
		 * }
		 *   
		 * - 객체 선언
		 * 클래스명 객체명;
		 *  
		 * - 객체 선언&초기화(생성)
		 * 클래스명 객체명 = new 클래스명();
		 *  
		 * - 메서드 사용하는 방법
		 * 객체명.메서드명();
		 * 
		 * - 같은 클래스 안에서 메서드를 호출할 때에는 메서드명으로 호출 가능
		 *   => 메서드명();
		 * - 다른 클래스 안에서 메서드를 호출할 떄에는 객체를 이용하여 사용
		 *   => 객체명.메서드명();
		 *  */
		
		/* 접근제한자(제어자)
		 * - public : 모두 사용 가능
		 * - protected : 나(내 클래스)+패키지+자식클래스(상속받을 때 사용)
		 * - (default) : 나(내 클래스)+패키지
		 * - private : 나(내 클래스)
		 * 
		 * 클래스에서 public을 붙일 수 있는 건 파일명과 클래스 명이 같을 때만 가능
		 * 멤버변수는 private를 쓰는 게 일반적, 메서드는 public을 쓰는 게 일반적
		 * private : 멤버변수 / 메서드를 다른 클래스에서 접근할 수 없게 함
		 * - private으로 선언된 멤버변수를 접근할 때는 getter(가져올 때)/setter(변경할 때)라는 메서드를 통해 접근
		 * */
		
		Point p=new Point();
		p.print();

	}

}
/*클래스 생성 위치 : 다른 클래스 밖에서 생성*/
//(0,0)등 x좌표와 y좌표를 나타내는 클래스
class Point{
	//멤버변수 (내 클래스의 모든 메서드에서 공유)
	int x;
	int y;
	
	public void print() {
		System.out.println("("+x+","+y+")");
	}
	
}



